I"%<h1 id="going-back-to-an-old-well">Going Back to an Old Well</h1>

<p>I havenâ€™t made a new post in some time now. I was hoping to update this blog every once in a while with new projects, papers, and proclivities. Unfortunately, I underestimated how busy Iâ€™d be and how motivated Iâ€™d be to set time aside for a new project. My winter semester is over and the spring of 2022 seems to be delayed; Iâ€™m at a delightful intersection where no one expects anything from me and I canâ€™t do much outside anyway. Iâ€™m sitting in my parentsâ€™ lawn, watching our cats, and I want to make something.</p>

<p>I donâ€™t have the time to make something from scratch, but I do have one old project I wanted to remake: the Wikipedia Network Research Assistant. I wrote this tool in Python when I first learned the language almost 2 years ago, and Iâ€™m sure I made it suboptimally. As a fun idea, I thought I could log my stream of consciousness as I rediscover my old work, and try to make it better.</p>

<h1 id="the-wikipedia-network-research-assistant-wnra-concept">The Wikipedia Network Research Assistant (WNRA) Concept</h1>

<p>(<em>Not to be confused with the Womenâ€™s National Rifle Association</em>)</p>

<p>The premise here was simple:</p>

<ol>
  <li>Ask the user for a term</li>
  <li>Look up the Wikipedia article for that term</li>
  <li>Using some heuristic, figure out a list of the most commonly related terms</li>
  <li>Recursively figure out what terms are related to those terms (with a configurable depth and breadth of the search)</li>
  <li>Visualize the results</li>
</ol>

<p>I used the first libraries I could find for this kind of task: <a href="https://github.com/martin-majlis/Wikipedia-API">Wikipedia-API</a> to scan the Wikipedia pages and <a href="https://networkx.org/">NetworkX</a> to visualize the results in a network plot. After about 90 lines of code, I was really happy with the results, presented below:</p>

<!-- ![Now that's a lot of latin](..\assets\img\wiki\old\Cactus.webp){: .mx-auto.d-block :}
<figcaption align = "center"><i>Cactus</i></figcaption> -->

<p><img src="..\assets\img\wiki\old\cat.webp" alt="" class="mx-auto d-block" /></p>
<figcaption align="center"><i>Cat</i></figcaption>

<!-- ![](..\assets\img\wiki\old\OmShantiOm.webp){: .mx-auto.d-block :}
<figcaption align = "center"><i>Om Shanti Om</i></figcaption> -->

<!-- ![](..\assets\img\wiki\old\PostMalone.webp){: .mx-auto.d-block :}
<figcaption align = "center"><i>Post Malone</i></figcaption> -->

<p><img src="..\assets\img\wiki\old\TaylorSwift.webp" alt="" class="mx-auto d-block" /></p>
<figcaption align="center"><i>Taylor Swift</i></figcaption>

<p><img src="..\assets\img\wiki\old\Toronto.webp" alt="" class="mx-auto d-block" /></p>
<figcaption align="center"><i>Toronto</i></figcaption>

<p>There are a few things that stick out to me about the results here:</p>

<ol>
  <li>
    <p>Itâ€™s unreadable (I guess I didnâ€™t care to look any deeper in the <a href="https://networkx.org/">NetworkX</a> library to make text a little more legible)</p>
  </li>
  <li>
    <p>The way networks form is surprisingly pleasing to the eye, even though I didnâ€™t spend any effort on this part. Shout-out to the developers of <a href="https://networkx.org/">NetworkX</a>.</p>
  </li>
  <li>
    <p>I could apply this to other APIs: <a href="https://github.com/ElsevierDev/elsapy">Elsevier</a>, <a href="https://developer.ieee.org/Python_Software_Development_Kit">IEEE</a>, and <a href="https://github.com/scholarly-python-package/scholarly">Google Scholar</a> all seem to have some sort of API accessible through Python (even if they are not official).</p>
  </li>
  <li>
    <p>Kanye West does not show up in Taylor Swiftâ€™s network. I could have sworn he did ðŸ¤”. Interestingly, the songs that <em>do</em> appear in her network are a cool window into the past.</p>
  </li>
  <li>
    <p>Thereâ€™s no child nodes that connect to each other. Did I forget to program that in or is that somehow just how these results look? My guess is I forgot.</p>
  </li>
  <li>
    <p>Thereâ€™s no visual indication here of whether there is a two-way connection between parent nodes and their children. In other words, thereâ€™s no way to know if a node is the child of its own children. In other words, is a node <a href="https://youtu.be/lxL9dl1zR0o?t=75">its own grandparent?</a></p>
  </li>
</ol>

<p>I will stop myself before I get too deep into potential improvements. That well would never end.</p>

<h1 id="timeline-of-remaking">Timeline of Remaking</h1>

<p>###4:45 PM)</p>

<p>Iâ€™m going to start adding timestamps here for my own interest.</p>
:ET